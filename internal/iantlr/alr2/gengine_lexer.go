// Code generated from gengine.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type gengineLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var GengineLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func genginelexerLexerInit() {
	staticData := &GengineLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "','", "'@name'", "'@id'", "'@code'", "'@desc'", "'@sal'", "", "",
		"'&&'", "'||'", "'and'", "'or'", "'&'", "'|'", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "'+'", "'-'", "'/'", "'*'",
		"'=='", "'>'", "'<'", "'>='", "'<='", "'!='", "'!'", "'eq'", "'gt'",
		"'lt'", "'ge'", "'le'", "'ne'", "':='", "'='", "'+='", "'-='", "'*='",
		"'/='", "'['", "']'", "';'", "'{'", "'}'", "'('", "')'", "'.'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "NIL", "RULE", "AND", "OR", "AND_STR", "OR_STR",
		"AND_SINGLE", "OR_SINGLE", "CONC", "IF", "ELSE", "RETURN", "FOR", "BREAK",
		"FORRANGE", "CONTINUE", "TRUE", "FALSE", "NULL_LITERAL", "SALIENCE",
		"BEGIN", "END", "SIMPLENAME", "INT", "PLUS", "MINUS", "DIV", "MUL",
		"EQUALS", "GT", "LT", "GTE", "LTE", "NOTEQUALS", "NOT", "EQUALS_STR",
		"GT_STR", "LT_STR", "GTE_STR", "LTE_STR", "NOTEQUALS_STR", "ASSIGN",
		"SET", "PLUSEQUAL", "MINUSEQUAL", "MULTIEQUAL", "DIVEQUAL", "LSQARE",
		"RSQARE", "SEMICOLON", "LR_BRACE", "RR_BRACE", "LR_BRACKET", "RR_BRACKET",
		"DOT", "DQUOTA_STRING", "DOTTEDNAME", "DOUBLEDOTTEDNAME", "REAL_LITERAL",
		"SL_COMMENT", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "DEC_DIGIT", "A", "B",
		"C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P",
		"Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "EXPONENT_NUM_PART",
		"NIL", "RULE", "AND", "OR", "AND_STR", "OR_STR", "AND_SINGLE", "OR_SINGLE",
		"CONC", "IF", "ELSE", "RETURN", "FOR", "BREAK", "FORRANGE", "CONTINUE",
		"TRUE", "FALSE", "NULL_LITERAL", "SALIENCE", "BEGIN", "END", "SIMPLENAME",
		"INT", "PLUS", "MINUS", "DIV", "MUL", "EQUALS", "GT", "LT", "GTE", "LTE",
		"NOTEQUALS", "NOT", "EQUALS_STR", "GT_STR", "LT_STR", "GTE_STR", "LTE_STR",
		"NOTEQUALS_STR", "ASSIGN", "SET", "PLUSEQUAL", "MINUSEQUAL", "MULTIEQUAL",
		"DIVEQUAL", "LSQARE", "RSQARE", "SEMICOLON", "LR_BRACE", "RR_BRACE",
		"LR_BRACKET", "RR_BRACKET", "DOT", "DQUOTA_STRING", "DOTTEDNAME", "DOUBLEDOTTEDNAME",
		"REAL_LITERAL", "SL_COMMENT", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 67, 573, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24,
		1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 3, 33, 277,
		8, 33, 1, 33, 4, 33, 280, 8, 33, 11, 33, 12, 33, 281, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37,
		1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 40, 1,
		40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43,
		1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47,
		1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1,
		49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50,
		1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1,
		55, 1, 55, 1, 56, 4, 56, 394, 8, 56, 11, 56, 12, 56, 395, 1, 56, 5, 56,
		399, 8, 56, 10, 56, 12, 56, 402, 9, 56, 1, 57, 4, 57, 405, 8, 57, 11, 57,
		12, 57, 406, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1,
		62, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 66,
		1, 66, 1, 66, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1,
		70, 1, 70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73,
		1, 73, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75, 1, 76, 1, 76, 1, 77, 1,
		77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80,
		1, 81, 1, 81, 1, 82, 1, 82, 1, 83, 1, 83, 1, 84, 1, 84, 1, 85, 1, 85, 1,
		86, 1, 86, 1, 87, 1, 87, 1, 88, 1, 88, 1, 89, 1, 89, 1, 89, 1, 89, 1, 89,
		1, 89, 5, 89, 492, 8, 89, 10, 89, 12, 89, 495, 9, 89, 1, 89, 1, 89, 1,
		90, 1, 90, 1, 90, 1, 90, 1, 91, 1, 91, 1, 91, 1, 91, 1, 91, 1, 91, 1, 92,
		4, 92, 510, 8, 92, 11, 92, 12, 92, 511, 3, 92, 514, 8, 92, 1, 92, 1, 92,
		4, 92, 518, 8, 92, 11, 92, 12, 92, 519, 1, 92, 4, 92, 523, 8, 92, 11, 92,
		12, 92, 524, 1, 92, 1, 92, 1, 92, 1, 92, 4, 92, 531, 8, 92, 11, 92, 12,
		92, 532, 3, 92, 535, 8, 92, 1, 92, 1, 92, 4, 92, 539, 8, 92, 11, 92, 12,
		92, 540, 1, 92, 1, 92, 1, 92, 4, 92, 546, 8, 92, 11, 92, 12, 92, 547, 1,
		92, 1, 92, 3, 92, 552, 8, 92, 1, 93, 1, 93, 1, 93, 1, 93, 5, 93, 558, 8,
		93, 10, 93, 12, 93, 561, 9, 93, 1, 93, 1, 93, 1, 93, 1, 93, 1, 94, 4, 94,
		568, 8, 94, 11, 94, 12, 94, 569, 1, 94, 1, 94, 1, 559, 0, 95, 1, 1, 3,
		2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 0, 15, 0, 17, 0, 19, 0, 21, 0, 23, 0, 25,
		0, 27, 0, 29, 0, 31, 0, 33, 0, 35, 0, 37, 0, 39, 0, 41, 0, 43, 0, 45, 0,
		47, 0, 49, 0, 51, 0, 53, 0, 55, 0, 57, 0, 59, 0, 61, 0, 63, 0, 65, 0, 67,
		0, 69, 7, 71, 8, 73, 9, 75, 10, 77, 11, 79, 12, 81, 13, 83, 14, 85, 15,
		87, 16, 89, 17, 91, 18, 93, 19, 95, 20, 97, 21, 99, 22, 101, 23, 103, 24,
		105, 25, 107, 26, 109, 27, 111, 28, 113, 29, 115, 30, 117, 31, 119, 32,
		121, 33, 123, 34, 125, 35, 127, 36, 129, 37, 131, 38, 133, 39, 135, 40,
		137, 41, 139, 42, 141, 43, 143, 44, 145, 45, 147, 46, 149, 47, 151, 48,
		153, 49, 155, 50, 157, 51, 159, 52, 161, 53, 163, 54, 165, 55, 167, 56,
		169, 57, 171, 58, 173, 59, 175, 60, 177, 61, 179, 62, 181, 63, 183, 64,
		185, 65, 187, 66, 189, 67, 1, 0, 31, 1, 0, 48, 57, 2, 0, 65, 65, 97, 97,
		2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2,
		0, 69, 69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2,
		0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2,
		0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2,
		0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2,
		0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2,
		0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2,
		0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2,
		0, 90, 90, 122, 122, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90,
		95, 95, 97, 122, 2, 0, 34, 34, 92, 92, 3, 0, 9, 10, 13, 13, 32, 32, 565,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0,
		0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0,
		0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1,
		0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95,
		1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0,
		103, 1, 0, 0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0,
		0, 0, 0, 111, 1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117,
		1, 0, 0, 0, 0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0,
		0, 125, 1, 0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1,
		0, 0, 0, 0, 133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0,
		139, 1, 0, 0, 0, 0, 141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0,
		0, 0, 0, 147, 1, 0, 0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153,
		1, 0, 0, 0, 0, 155, 1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0,
		0, 161, 1, 0, 0, 0, 0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1,
		0, 0, 0, 0, 169, 1, 0, 0, 0, 0, 171, 1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0,
		175, 1, 0, 0, 0, 0, 177, 1, 0, 0, 0, 0, 179, 1, 0, 0, 0, 0, 181, 1, 0,
		0, 0, 0, 183, 1, 0, 0, 0, 0, 185, 1, 0, 0, 0, 0, 187, 1, 0, 0, 0, 0, 189,
		1, 0, 0, 0, 1, 191, 1, 0, 0, 0, 3, 193, 1, 0, 0, 0, 5, 199, 1, 0, 0, 0,
		7, 203, 1, 0, 0, 0, 9, 209, 1, 0, 0, 0, 11, 215, 1, 0, 0, 0, 13, 220, 1,
		0, 0, 0, 15, 222, 1, 0, 0, 0, 17, 224, 1, 0, 0, 0, 19, 226, 1, 0, 0, 0,
		21, 228, 1, 0, 0, 0, 23, 230, 1, 0, 0, 0, 25, 232, 1, 0, 0, 0, 27, 234,
		1, 0, 0, 0, 29, 236, 1, 0, 0, 0, 31, 238, 1, 0, 0, 0, 33, 240, 1, 0, 0,
		0, 35, 242, 1, 0, 0, 0, 37, 244, 1, 0, 0, 0, 39, 246, 1, 0, 0, 0, 41, 248,
		1, 0, 0, 0, 43, 250, 1, 0, 0, 0, 45, 252, 1, 0, 0, 0, 47, 254, 1, 0, 0,
		0, 49, 256, 1, 0, 0, 0, 51, 258, 1, 0, 0, 0, 53, 260, 1, 0, 0, 0, 55, 262,
		1, 0, 0, 0, 57, 264, 1, 0, 0, 0, 59, 266, 1, 0, 0, 0, 61, 268, 1, 0, 0,
		0, 63, 270, 1, 0, 0, 0, 65, 272, 1, 0, 0, 0, 67, 274, 1, 0, 0, 0, 69, 283,
		1, 0, 0, 0, 71, 287, 1, 0, 0, 0, 73, 292, 1, 0, 0, 0, 75, 295, 1, 0, 0,
		0, 77, 298, 1, 0, 0, 0, 79, 302, 1, 0, 0, 0, 81, 305, 1, 0, 0, 0, 83, 307,
		1, 0, 0, 0, 85, 309, 1, 0, 0, 0, 87, 314, 1, 0, 0, 0, 89, 317, 1, 0, 0,
		0, 91, 322, 1, 0, 0, 0, 93, 329, 1, 0, 0, 0, 95, 333, 1, 0, 0, 0, 97, 339,
		1, 0, 0, 0, 99, 348, 1, 0, 0, 0, 101, 357, 1, 0, 0, 0, 103, 362, 1, 0,
		0, 0, 105, 368, 1, 0, 0, 0, 107, 373, 1, 0, 0, 0, 109, 382, 1, 0, 0, 0,
		111, 388, 1, 0, 0, 0, 113, 393, 1, 0, 0, 0, 115, 404, 1, 0, 0, 0, 117,
		408, 1, 0, 0, 0, 119, 410, 1, 0, 0, 0, 121, 412, 1, 0, 0, 0, 123, 414,
		1, 0, 0, 0, 125, 416, 1, 0, 0, 0, 127, 419, 1, 0, 0, 0, 129, 421, 1, 0,
		0, 0, 131, 423, 1, 0, 0, 0, 133, 426, 1, 0, 0, 0, 135, 429, 1, 0, 0, 0,
		137, 432, 1, 0, 0, 0, 139, 434, 1, 0, 0, 0, 141, 437, 1, 0, 0, 0, 143,
		440, 1, 0, 0, 0, 145, 443, 1, 0, 0, 0, 147, 446, 1, 0, 0, 0, 149, 449,
		1, 0, 0, 0, 151, 452, 1, 0, 0, 0, 153, 455, 1, 0, 0, 0, 155, 457, 1, 0,
		0, 0, 157, 460, 1, 0, 0, 0, 159, 463, 1, 0, 0, 0, 161, 466, 1, 0, 0, 0,
		163, 469, 1, 0, 0, 0, 165, 471, 1, 0, 0, 0, 167, 473, 1, 0, 0, 0, 169,
		475, 1, 0, 0, 0, 171, 477, 1, 0, 0, 0, 173, 479, 1, 0, 0, 0, 175, 481,
		1, 0, 0, 0, 177, 483, 1, 0, 0, 0, 179, 485, 1, 0, 0, 0, 181, 498, 1, 0,
		0, 0, 183, 502, 1, 0, 0, 0, 185, 551, 1, 0, 0, 0, 187, 553, 1, 0, 0, 0,
		189, 567, 1, 0, 0, 0, 191, 192, 5, 44, 0, 0, 192, 2, 1, 0, 0, 0, 193, 194,
		5, 64, 0, 0, 194, 195, 5, 110, 0, 0, 195, 196, 5, 97, 0, 0, 196, 197, 5,
		109, 0, 0, 197, 198, 5, 101, 0, 0, 198, 4, 1, 0, 0, 0, 199, 200, 5, 64,
		0, 0, 200, 201, 5, 105, 0, 0, 201, 202, 5, 100, 0, 0, 202, 6, 1, 0, 0,
		0, 203, 204, 5, 64, 0, 0, 204, 205, 5, 99, 0, 0, 205, 206, 5, 111, 0, 0,
		206, 207, 5, 100, 0, 0, 207, 208, 5, 101, 0, 0, 208, 8, 1, 0, 0, 0, 209,
		210, 5, 64, 0, 0, 210, 211, 5, 100, 0, 0, 211, 212, 5, 101, 0, 0, 212,
		213, 5, 115, 0, 0, 213, 214, 5, 99, 0, 0, 214, 10, 1, 0, 0, 0, 215, 216,
		5, 64, 0, 0, 216, 217, 5, 115, 0, 0, 217, 218, 5, 97, 0, 0, 218, 219, 5,
		108, 0, 0, 219, 12, 1, 0, 0, 0, 220, 221, 7, 0, 0, 0, 221, 14, 1, 0, 0,
		0, 222, 223, 7, 1, 0, 0, 223, 16, 1, 0, 0, 0, 224, 225, 7, 2, 0, 0, 225,
		18, 1, 0, 0, 0, 226, 227, 7, 3, 0, 0, 227, 20, 1, 0, 0, 0, 228, 229, 7,
		4, 0, 0, 229, 22, 1, 0, 0, 0, 230, 231, 7, 5, 0, 0, 231, 24, 1, 0, 0, 0,
		232, 233, 7, 6, 0, 0, 233, 26, 1, 0, 0, 0, 234, 235, 7, 7, 0, 0, 235, 28,
		1, 0, 0, 0, 236, 237, 7, 8, 0, 0, 237, 30, 1, 0, 0, 0, 238, 239, 7, 9,
		0, 0, 239, 32, 1, 0, 0, 0, 240, 241, 7, 10, 0, 0, 241, 34, 1, 0, 0, 0,
		242, 243, 7, 11, 0, 0, 243, 36, 1, 0, 0, 0, 244, 245, 7, 12, 0, 0, 245,
		38, 1, 0, 0, 0, 246, 247, 7, 13, 0, 0, 247, 40, 1, 0, 0, 0, 248, 249, 7,
		14, 0, 0, 249, 42, 1, 0, 0, 0, 250, 251, 7, 15, 0, 0, 251, 44, 1, 0, 0,
		0, 252, 253, 7, 16, 0, 0, 253, 46, 1, 0, 0, 0, 254, 255, 7, 17, 0, 0, 255,
		48, 1, 0, 0, 0, 256, 257, 7, 18, 0, 0, 257, 50, 1, 0, 0, 0, 258, 259, 7,
		19, 0, 0, 259, 52, 1, 0, 0, 0, 260, 261, 7, 20, 0, 0, 261, 54, 1, 0, 0,
		0, 262, 263, 7, 21, 0, 0, 263, 56, 1, 0, 0, 0, 264, 265, 7, 22, 0, 0, 265,
		58, 1, 0, 0, 0, 266, 267, 7, 23, 0, 0, 267, 60, 1, 0, 0, 0, 268, 269, 7,
		24, 0, 0, 269, 62, 1, 0, 0, 0, 270, 271, 7, 25, 0, 0, 271, 64, 1, 0, 0,
		0, 272, 273, 7, 26, 0, 0, 273, 66, 1, 0, 0, 0, 274, 276, 7, 5, 0, 0, 275,
		277, 5, 45, 0, 0, 276, 275, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 279,
		1, 0, 0, 0, 278, 280, 3, 13, 6, 0, 279, 278, 1, 0, 0, 0, 280, 281, 1, 0,
		0, 0, 281, 279, 1, 0, 0, 0, 281, 282, 1, 0, 0, 0, 282, 68, 1, 0, 0, 0,
		283, 284, 3, 41, 20, 0, 284, 285, 3, 31, 15, 0, 285, 286, 3, 37, 18, 0,
		286, 70, 1, 0, 0, 0, 287, 288, 3, 49, 24, 0, 288, 289, 3, 55, 27, 0, 289,
		290, 3, 37, 18, 0, 290, 291, 3, 23, 11, 0, 291, 72, 1, 0, 0, 0, 292, 293,
		5, 38, 0, 0, 293, 294, 5, 38, 0, 0, 294, 74, 1, 0, 0, 0, 295, 296, 5, 124,
		0, 0, 296, 297, 5, 124, 0, 0, 297, 76, 1, 0, 0, 0, 298, 299, 5, 97, 0,
		0, 299, 300, 5, 110, 0, 0, 300, 301, 5, 100, 0, 0, 301, 78, 1, 0, 0, 0,
		302, 303, 5, 111, 0, 0, 303, 304, 5, 114, 0, 0, 304, 80, 1, 0, 0, 0, 305,
		306, 5, 38, 0, 0, 306, 82, 1, 0, 0, 0, 307, 308, 5, 124, 0, 0, 308, 84,
		1, 0, 0, 0, 309, 310, 3, 19, 9, 0, 310, 311, 3, 43, 21, 0, 311, 312, 3,
		41, 20, 0, 312, 313, 3, 19, 9, 0, 313, 86, 1, 0, 0, 0, 314, 315, 3, 31,
		15, 0, 315, 316, 3, 25, 12, 0, 316, 88, 1, 0, 0, 0, 317, 318, 3, 23, 11,
		0, 318, 319, 3, 37, 18, 0, 319, 320, 3, 51, 25, 0, 320, 321, 3, 23, 11,
		0, 321, 90, 1, 0, 0, 0, 322, 323, 3, 49, 24, 0, 323, 324, 3, 23, 11, 0,
		324, 325, 3, 53, 26, 0, 325, 326, 3, 55, 27, 0, 326, 327, 3, 49, 24, 0,
		327, 328, 3, 41, 20, 0, 328, 92, 1, 0, 0, 0, 329, 330, 3, 25, 12, 0, 330,
		331, 3, 43, 21, 0, 331, 332, 3, 49, 24, 0, 332, 94, 1, 0, 0, 0, 333, 334,
		3, 17, 8, 0, 334, 335, 3, 49, 24, 0, 335, 336, 3, 23, 11, 0, 336, 337,
		3, 15, 7, 0, 337, 338, 3, 35, 17, 0, 338, 96, 1, 0, 0, 0, 339, 340, 3,
		25, 12, 0, 340, 341, 3, 43, 21, 0, 341, 342, 3, 49, 24, 0, 342, 343, 3,
		49, 24, 0, 343, 344, 3, 15, 7, 0, 344, 345, 3, 41, 20, 0, 345, 346, 3,
		27, 13, 0, 346, 347, 3, 23, 11, 0, 347, 98, 1, 0, 0, 0, 348, 349, 3, 19,
		9, 0, 349, 350, 3, 43, 21, 0, 350, 351, 3, 41, 20, 0, 351, 352, 3, 53,
		26, 0, 352, 353, 3, 31, 15, 0, 353, 354, 3, 41, 20, 0, 354, 355, 3, 55,
		27, 0, 355, 356, 3, 23, 11, 0, 356, 100, 1, 0, 0, 0, 357, 358, 3, 53, 26,
		0, 358, 359, 3, 49, 24, 0, 359, 360, 3, 55, 27, 0, 360, 361, 3, 23, 11,
		0, 361, 102, 1, 0, 0, 0, 362, 363, 3, 25, 12, 0, 363, 364, 3, 15, 7, 0,
		364, 365, 3, 37, 18, 0, 365, 366, 3, 51, 25, 0, 366, 367, 3, 23, 11, 0,
		367, 104, 1, 0, 0, 0, 368, 369, 3, 41, 20, 0, 369, 370, 3, 55, 27, 0, 370,
		371, 3, 37, 18, 0, 371, 372, 3, 37, 18, 0, 372, 106, 1, 0, 0, 0, 373, 374,
		3, 51, 25, 0, 374, 375, 3, 15, 7, 0, 375, 376, 3, 37, 18, 0, 376, 377,
		3, 31, 15, 0, 377, 378, 3, 23, 11, 0, 378, 379, 3, 41, 20, 0, 379, 380,
		3, 19, 9, 0, 380, 381, 3, 23, 11, 0, 381, 108, 1, 0, 0, 0, 382, 383, 3,
		17, 8, 0, 383, 384, 3, 23, 11, 0, 384, 385, 3, 27, 13, 0, 385, 386, 3,
		31, 15, 0, 386, 387, 3, 41, 20, 0, 387, 110, 1, 0, 0, 0, 388, 389, 3, 23,
		11, 0, 389, 390, 3, 41, 20, 0, 390, 391, 3, 21, 10, 0, 391, 112, 1, 0,
		0, 0, 392, 394, 7, 27, 0, 0, 393, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0,
		395, 393, 1, 0, 0, 0, 395, 396, 1, 0, 0, 0, 396, 400, 1, 0, 0, 0, 397,
		399, 7, 28, 0, 0, 398, 397, 1, 0, 0, 0, 399, 402, 1, 0, 0, 0, 400, 398,
		1, 0, 0, 0, 400, 401, 1, 0, 0, 0, 401, 114, 1, 0, 0, 0, 402, 400, 1, 0,
		0, 0, 403, 405, 2, 48, 57, 0, 404, 403, 1, 0, 0, 0, 405, 406, 1, 0, 0,
		0, 406, 404, 1, 0, 0, 0, 406, 407, 1, 0, 0, 0, 407, 116, 1, 0, 0, 0, 408,
		409, 5, 43, 0, 0, 409, 118, 1, 0, 0, 0, 410, 411, 5, 45, 0, 0, 411, 120,
		1, 0, 0, 0, 412, 413, 5, 47, 0, 0, 413, 122, 1, 0, 0, 0, 414, 415, 5, 42,
		0, 0, 415, 124, 1, 0, 0, 0, 416, 417, 5, 61, 0, 0, 417, 418, 5, 61, 0,
		0, 418, 126, 1, 0, 0, 0, 419, 420, 5, 62, 0, 0, 420, 128, 1, 0, 0, 0, 421,
		422, 5, 60, 0, 0, 422, 130, 1, 0, 0, 0, 423, 424, 5, 62, 0, 0, 424, 425,
		5, 61, 0, 0, 425, 132, 1, 0, 0, 0, 426, 427, 5, 60, 0, 0, 427, 428, 5,
		61, 0, 0, 428, 134, 1, 0, 0, 0, 429, 430, 5, 33, 0, 0, 430, 431, 5, 61,
		0, 0, 431, 136, 1, 0, 0, 0, 432, 433, 5, 33, 0, 0, 433, 138, 1, 0, 0, 0,
		434, 435, 5, 101, 0, 0, 435, 436, 5, 113, 0, 0, 436, 140, 1, 0, 0, 0, 437,
		438, 5, 103, 0, 0, 438, 439, 5, 116, 0, 0, 439, 142, 1, 0, 0, 0, 440, 441,
		5, 108, 0, 0, 441, 442, 5, 116, 0, 0, 442, 144, 1, 0, 0, 0, 443, 444, 5,
		103, 0, 0, 444, 445, 5, 101, 0, 0, 445, 146, 1, 0, 0, 0, 446, 447, 5, 108,
		0, 0, 447, 448, 5, 101, 0, 0, 448, 148, 1, 0, 0, 0, 449, 450, 5, 110, 0,
		0, 450, 451, 5, 101, 0, 0, 451, 150, 1, 0, 0, 0, 452, 453, 5, 58, 0, 0,
		453, 454, 5, 61, 0, 0, 454, 152, 1, 0, 0, 0, 455, 456, 5, 61, 0, 0, 456,
		154, 1, 0, 0, 0, 457, 458, 5, 43, 0, 0, 458, 459, 5, 61, 0, 0, 459, 156,
		1, 0, 0, 0, 460, 461, 5, 45, 0, 0, 461, 462, 5, 61, 0, 0, 462, 158, 1,
		0, 0, 0, 463, 464, 5, 42, 0, 0, 464, 465, 5, 61, 0, 0, 465, 160, 1, 0,
		0, 0, 466, 467, 5, 47, 0, 0, 467, 468, 5, 61, 0, 0, 468, 162, 1, 0, 0,
		0, 469, 470, 5, 91, 0, 0, 470, 164, 1, 0, 0, 0, 471, 472, 5, 93, 0, 0,
		472, 166, 1, 0, 0, 0, 473, 474, 5, 59, 0, 0, 474, 168, 1, 0, 0, 0, 475,
		476, 5, 123, 0, 0, 476, 170, 1, 0, 0, 0, 477, 478, 5, 125, 0, 0, 478, 172,
		1, 0, 0, 0, 479, 480, 5, 40, 0, 0, 480, 174, 1, 0, 0, 0, 481, 482, 5, 41,
		0, 0, 482, 176, 1, 0, 0, 0, 483, 484, 5, 46, 0, 0, 484, 178, 1, 0, 0, 0,
		485, 493, 5, 34, 0, 0, 486, 487, 5, 92, 0, 0, 487, 492, 9, 0, 0, 0, 488,
		489, 5, 34, 0, 0, 489, 492, 5, 34, 0, 0, 490, 492, 8, 29, 0, 0, 491, 486,
		1, 0, 0, 0, 491, 488, 1, 0, 0, 0, 491, 490, 1, 0, 0, 0, 492, 495, 1, 0,
		0, 0, 493, 491, 1, 0, 0, 0, 493, 494, 1, 0, 0, 0, 494, 496, 1, 0, 0, 0,
		495, 493, 1, 0, 0, 0, 496, 497, 5, 34, 0, 0, 497, 180, 1, 0, 0, 0, 498,
		499, 3, 113, 56, 0, 499, 500, 3, 177, 88, 0, 500, 501, 3, 113, 56, 0, 501,
		182, 1, 0, 0, 0, 502, 503, 3, 113, 56, 0, 503, 504, 3, 177, 88, 0, 504,
		505, 3, 113, 56, 0, 505, 506, 3, 177, 88, 0, 506, 507, 3, 113, 56, 0, 507,
		184, 1, 0, 0, 0, 508, 510, 3, 13, 6, 0, 509, 508, 1, 0, 0, 0, 510, 511,
		1, 0, 0, 0, 511, 509, 1, 0, 0, 0, 511, 512, 1, 0, 0, 0, 512, 514, 1, 0,
		0, 0, 513, 509, 1, 0, 0, 0, 513, 514, 1, 0, 0, 0, 514, 515, 1, 0, 0, 0,
		515, 517, 5, 46, 0, 0, 516, 518, 3, 13, 6, 0, 517, 516, 1, 0, 0, 0, 518,
		519, 1, 0, 0, 0, 519, 517, 1, 0, 0, 0, 519, 520, 1, 0, 0, 0, 520, 552,
		1, 0, 0, 0, 521, 523, 3, 13, 6, 0, 522, 521, 1, 0, 0, 0, 523, 524, 1, 0,
		0, 0, 524, 522, 1, 0, 0, 0, 524, 525, 1, 0, 0, 0, 525, 526, 1, 0, 0, 0,
		526, 527, 5, 46, 0, 0, 527, 528, 3, 67, 33, 0, 528, 552, 1, 0, 0, 0, 529,
		531, 3, 13, 6, 0, 530, 529, 1, 0, 0, 0, 531, 532, 1, 0, 0, 0, 532, 530,
		1, 0, 0, 0, 532, 533, 1, 0, 0, 0, 533, 535, 1, 0, 0, 0, 534, 530, 1, 0,
		0, 0, 534, 535, 1, 0, 0, 0, 535, 536, 1, 0, 0, 0, 536, 538, 5, 46, 0, 0,
		537, 539, 3, 13, 6, 0, 538, 537, 1, 0, 0, 0, 539, 540, 1, 0, 0, 0, 540,
		538, 1, 0, 0, 0, 540, 541, 1, 0, 0, 0, 541, 542, 1, 0, 0, 0, 542, 543,
		3, 67, 33, 0, 543, 552, 1, 0, 0, 0, 544, 546, 3, 13, 6, 0, 545, 544, 1,
		0, 0, 0, 546, 547, 1, 0, 0, 0, 547, 545, 1, 0, 0, 0, 547, 548, 1, 0, 0,
		0, 548, 549, 1, 0, 0, 0, 549, 550, 3, 67, 33, 0, 550, 552, 1, 0, 0, 0,
		551, 513, 1, 0, 0, 0, 551, 522, 1, 0, 0, 0, 551, 534, 1, 0, 0, 0, 551,
		545, 1, 0, 0, 0, 552, 186, 1, 0, 0, 0, 553, 554, 5, 47, 0, 0, 554, 555,
		5, 47, 0, 0, 555, 559, 1, 0, 0, 0, 556, 558, 9, 0, 0, 0, 557, 556, 1, 0,
		0, 0, 558, 561, 1, 0, 0, 0, 559, 560, 1, 0, 0, 0, 559, 557, 1, 0, 0, 0,
		560, 562, 1, 0, 0, 0, 561, 559, 1, 0, 0, 0, 562, 563, 5, 10, 0, 0, 563,
		564, 1, 0, 0, 0, 564, 565, 6, 93, 0, 0, 565, 188, 1, 0, 0, 0, 566, 568,
		7, 30, 0, 0, 567, 566, 1, 0, 0, 0, 568, 569, 1, 0, 0, 0, 569, 567, 1, 0,
		0, 0, 569, 570, 1, 0, 0, 0, 570, 571, 1, 0, 0, 0, 571, 572, 6, 94, 0, 0,
		572, 190, 1, 0, 0, 0, 20, 0, 276, 281, 395, 398, 400, 406, 491, 493, 511,
		513, 519, 524, 532, 534, 540, 547, 551, 559, 569, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// gengineLexerInit initializes any static state used to implement gengineLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewgengineLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GengineLexerInit() {
	staticData := &GengineLexerLexerStaticData
	staticData.once.Do(genginelexerLexerInit)
}

// NewgengineLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewgengineLexer(input antlr.CharStream) *gengineLexer {
	GengineLexerInit()
	l := new(gengineLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &GengineLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "gengine.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// gengineLexer tokens.
const (
	gengineLexerT__0             = 1
	gengineLexerT__1             = 2
	gengineLexerT__2             = 3
	gengineLexerT__3             = 4
	gengineLexerT__4             = 5
	gengineLexerT__5             = 6
	gengineLexerNIL              = 7
	gengineLexerRULE             = 8
	gengineLexerAND              = 9
	gengineLexerOR               = 10
	gengineLexerAND_STR          = 11
	gengineLexerOR_STR           = 12
	gengineLexerAND_SINGLE       = 13
	gengineLexerOR_SINGLE        = 14
	gengineLexerCONC             = 15
	gengineLexerIF               = 16
	gengineLexerELSE             = 17
	gengineLexerRETURN           = 18
	gengineLexerFOR              = 19
	gengineLexerBREAK            = 20
	gengineLexerFORRANGE         = 21
	gengineLexerCONTINUE         = 22
	gengineLexerTRUE             = 23
	gengineLexerFALSE            = 24
	gengineLexerNULL_LITERAL     = 25
	gengineLexerSALIENCE         = 26
	gengineLexerBEGIN            = 27
	gengineLexerEND              = 28
	gengineLexerSIMPLENAME       = 29
	gengineLexerINT              = 30
	gengineLexerPLUS             = 31
	gengineLexerMINUS            = 32
	gengineLexerDIV              = 33
	gengineLexerMUL              = 34
	gengineLexerEQUALS           = 35
	gengineLexerGT               = 36
	gengineLexerLT               = 37
	gengineLexerGTE              = 38
	gengineLexerLTE              = 39
	gengineLexerNOTEQUALS        = 40
	gengineLexerNOT              = 41
	gengineLexerEQUALS_STR       = 42
	gengineLexerGT_STR           = 43
	gengineLexerLT_STR           = 44
	gengineLexerGTE_STR          = 45
	gengineLexerLTE_STR          = 46
	gengineLexerNOTEQUALS_STR    = 47
	gengineLexerASSIGN           = 48
	gengineLexerSET              = 49
	gengineLexerPLUSEQUAL        = 50
	gengineLexerMINUSEQUAL       = 51
	gengineLexerMULTIEQUAL       = 52
	gengineLexerDIVEQUAL         = 53
	gengineLexerLSQARE           = 54
	gengineLexerRSQARE           = 55
	gengineLexerSEMICOLON        = 56
	gengineLexerLR_BRACE         = 57
	gengineLexerRR_BRACE         = 58
	gengineLexerLR_BRACKET       = 59
	gengineLexerRR_BRACKET       = 60
	gengineLexerDOT              = 61
	gengineLexerDQUOTA_STRING    = 62
	gengineLexerDOTTEDNAME       = 63
	gengineLexerDOUBLEDOTTEDNAME = 64
	gengineLexerREAL_LITERAL     = 65
	gengineLexerSL_COMMENT       = 66
	gengineLexerWS               = 67
)
